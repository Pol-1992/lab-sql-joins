-- Joining on multiple tables
-- Write SQL queries to perform the following tasks using the Sakila database:

USE sakila;

-- 1. List the number of films per category.

SELECT
category.name,
COUNT(film.film_id) AS num_films
FROM category
JOIN film_category ON category.category_id = film_category.category_id
JOIN film ON film_category.film_id = film.film_id
GROUP BY category.name;

-- 2. Retrieve the store ID, city, and country for each store.

SELECT
store.store_id,
city.city,
country.country
FROM store
JOIN address ON store.address_id = address.address_id
JOIN city ON address.city_id = city.city_id
JOIN country ON city.country_id = country.country_id;


-- 3. Calculate the total revenue generated by each store in dollars.

SELECT
store.store_id,
CONCAT(SUM(payment.amount), ' $') AS total_revenue
FROM store
JOIN staff ON store.store_id = staff.store_id
JOIN payment ON staff.staff_id = payment.staff_id
GROUP BY store.store_id;


-- 4. Determine the average running time of films for each category.

SELECT
category.name,
AVG(film.length)
FROM film
JOIN film_category ON film.film_id = film_category.film_id
JOIN category ON film_category.category_id = category.category_id
GROUP BY category.name;


-- Bonus:
-- 5. Identify the film categories with the longest average running time.

SELECT
category.name,
AVG(film.length) AS avg_time
FROM film
JOIN film_category ON film.film_id = film_category.film_id
JOIN category ON film_category.category_id = category.category_id
GROUP BY category.name
ORDER BY avg_time DESC;

-- 6. Display the top 10 most frequently rented movies in descending order.

SELECT
film.title,
COUNT(rental.rental_id) AS most_rent
FROM rental
JOIN inventory ON rental.inventory_id = inventory.inventory_id
JOIN film ON inventory.film_id = film.film_id
GROUP BY film.title
ORDER BY most_rent DESC
LIMIT 10;

-- 7. Determine if "Academy Dinosaur" can be rented from Store 1.

-- 8.  Provide a list of all distinct film titles, along with their availability status in the inventory.

-- Include a column indicating whether each title is 'Available' or 'NOT available.'

-- Note that there are 42 titles that are not in the inventory, and this information can be obtained using a CASE statement combined with IFNULL."


